{"version":3,"sources":["serviceWorker.ts","core/store/app/action.ts","core/store/app/reducer.ts","core/store/user/action.ts","core/store/user/reducer.ts","core/store/content/action.ts","core/store/content/reducer.ts","core/store/route/action.ts","core/store/route/reducer.ts","core/store/permission/action.ts","core/store/permission/reducer.ts","core/store/store.ts","core/components/connected-router.tsx","pages/exceptions/404.tsx","layout/default/components/page-content.tsx","pages/dashboard/index.tsx","environments/environment.ts","core/net/default.interceptor.ts","services/menu/menu.service.ts","services/resource/resource.service.ts","layout/default/components/siderbar.tsx","layout/default/components/header.tsx","layout/default/default.tsx","core/components/auth-route.tsx","pages/user/login/login.tsx","layout/fullscreen.tsx","pages/user/user-routes.tsx","pages/page-routes.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","actionTypes","APP","defaultAppState","appStr","localStorage","getItem","JSON","parse","name","description","collapsed","getApp","appReducer","state","arguments","length","undefined","type","newState","Object","assign","setItem","stringify","objectSpread","USER","defaultUserState","userStr","getUser","userReducer","action","user","removeItem","contentState","pending","contentReducer","defaultRouteState","menus","routePath","breadcrumbs","getBreadcrumbByUrl","url","findItem","breadcrumbName","path","icon","callback","menu","visitMenus","split","slice","join","splice","title","_parent","data","inFn","parentMenu","level","forEach","children","routeReducer","items","_level","defaultPermissionState","resources","permissionReducer","reducers","combineReducers","appState","userState","routeState","permissionState","store","createStore","ConnectedRouter","connect","dispatch","ownerProps","redirectRoute","_Component","_temp","_getPrototypeOf2","_this","classCallCheck","this","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","unsubscribeFromHistory","handleLocationChange","props","pathname","inherits","createClass","key","value","history","listen","react_default","a","createElement","react_router","Component","NotFoundException","empty","style","marginTop","Content","PageContent","className","DashboardIndex","_ref","_class","Fragment","page_header","breadcrumb","routes","page_content_PageContent","environment","axios","defaults","headers","instance","create","interceptors","request","use","config","startsWith","error","console","log","Promise","reject","response","content","status","responseURL","message","modal","getMenus","asyncToGenerator","regenerator_default","mark","_callee","userId","wrap","_context","prev","next","abrupt","get","stop","_x","getResources","SubMenu","es_menu","LayoutSider","updateMenus","item","setMenus","updateResources","setPermissions","openMenuKeys","selectedMenuKeys","onOpenChange","openKeys","latestOpenKey","find","indexOf","id","push","setState","renderMenu","map","react_router_dom","to","Item","disabled","updateMenuKeys","visitCallback","loadLocalPermissions","_this2","then","res","nextProps","mode","selectedKeys","Header","LayoutHeader","appinfo","userinfo","toggle","logout","isSuppourtFullscreen","screenfull","enabled","isFullscreen","addEventListener","windowResize","bind","confirm","onOk","clear","_this3","_this$props","userMenu","rolename","organizename","Divider","onClick","userLi","dropdown","overlay","avatar","size","backgroundColor","username","settingMenu","toggleFullscreen","clearLocalStorage","width","alt","src","hidden","flex","Sider","DefaultLayout","layout","trigger","collapsible","AuthorizedRoute","logged","component","rest","objectWithoutProperties","render","routeProps","LoginForm","handleSubmit","e","preventDefault","form","validateFields","err","values","userName","login","getFieldDecorator","es_form","onSubmit","rules","required","input","prefix","color","placeholder","valuePropName","initialValue","es_checkbox","float","href","es_button","htmlType","Login","FullscreenLayout","UserRoutes","withRouter","fullscreen","exact","DefaultRoutes","PageRoutes","ReactDOM","es","createHashHistory","createBrowserHistory","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.849b285a.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/** 操作类型 */\r\nexport const actionTypes = {\r\n  /** 切换折叠状态 */\r\n  toggleCollapse: \"TOGGLE_COLLAPSE\"\r\n};\r\n\r\n/** 切换左边栏折叠状态 */\r\nexport const toggleCollapse = () => {\r\n  return {\r\n    type: actionTypes.toggleCollapse\r\n  };\r\n};\r\n","import { AppInfo } from \"../../models/app-info\";\r\nimport { actionTypes } from \"./action\";\r\n\r\nconst APP = \"APP\";\r\n\r\n/** 读取缓存中应用信息 */\r\nfunction getApp(): AppInfo {\r\n  const appStr = localStorage.getItem(APP);\r\n  if (appStr) {\r\n    return JSON.parse(appStr);\r\n  }\r\n  return {\r\n    name: \"后台管理\",\r\n    description: \"统一应用后台管理描述\",\r\n    collapsed: false\r\n  };\r\n}\r\n\r\nconst defaultAppState = getApp();\r\n\r\n/** 应用信息存储 */\r\nconst appReducer = (state: AppInfo = defaultAppState, action: any) => {\r\n  switch (action.type) {\r\n    case actionTypes.toggleCollapse:\r\n      const newState = Object.assign(state, {\r\n        collapsed: !state.collapsed\r\n      });\r\n      localStorage.setItem(APP, JSON.stringify(newState));\r\n      return newState;\r\n    default:\r\n      break;\r\n  }\r\n  return { ...state };\r\n};\r\n\r\nexport default appReducer;\r\n","import { UserInfo } from \"../../models/user-info\";\r\n\r\n/** 操作类型 */\r\nexport const actionTypes = {\r\n  /** 登录 */\r\n  login: \"LOGIN\",\r\n  /** 注销 */\r\n  logout: \"LOGOUT\"\r\n};\r\n\r\n/** 登录 */\r\nexport const login = (user: UserInfo) => {\r\n  return {\r\n    type: actionTypes.login,\r\n    user\r\n  };\r\n};\r\n\r\n/** 注销 */\r\nexport const logout = () => {\r\n  return {\r\n    type: actionTypes.logout\r\n  };\r\n};\r\n","import { UserInfo } from \"../../models/user-info\";\r\nimport { actionTypes } from \"./action\";\r\n\r\nconst USER = \"user\";\r\n\r\n/** 读取缓存中用户信息 */\r\nfunction getUser(): UserInfo | null {\r\n  const userStr = localStorage.getItem(USER);\r\n  if (userStr) {\r\n    return JSON.parse(userStr);\r\n  }\r\n  return null;\r\n}\r\n\r\n/** 清除缓存的用户信息 */\r\nexport function clearUser() {\r\n  localStorage.removeItem(USER);\r\n}\r\n\r\nconst defaultUserState = getUser();\r\n\r\n/** 用户信息存储 */\r\nconst userReducer = (state = defaultUserState, action: any) => {\r\n  switch (action.type) {\r\n    case actionTypes.login:\r\n      const newState = Object.assign(state || {}, action.user);\r\n      localStorage.setItem(USER, JSON.stringify(newState));\r\n      return newState;\r\n    case actionTypes.logout:\r\n      clearUser();\r\n      return null;\r\n    default:\r\n      break;\r\n  }\r\n  return { ...state };\r\n};\r\n\r\nexport default userReducer;\r\n","/** 内容区域加载状态 */\r\nexport const actionTypes = {\r\n  /** 设置加载状态 */\r\n  setLoadingState: \"SET_LOADING_STATE\"\r\n};\r\n\r\n/** 设置加载状态 */\r\nexport const setLoadingState = (pending: boolean) => {\r\n  return {\r\n    type: actionTypes.setLoadingState,\r\n    pending\r\n  };\r\n};\r\n","import { actionTypes } from \"./action\";\r\n\r\nconst contentState: {\r\n  /** 是否加载 */\r\n  pending: boolean;\r\n} = {\r\n  pending: true\r\n};\r\n\r\n/** 页面内容存储 */\r\nconst contentReducer = (state = contentState, action: any) => {\r\n  switch (action.type) {\r\n    case actionTypes.setLoadingState:\r\n      return Object.assign(state, {\r\n        pending: action.pending\r\n      });\r\n    default:\r\n      break;\r\n  }\r\n  return { ...state };\r\n};\r\n\r\nexport default contentReducer;\r\n","import { MenuInfo } from \"../../models/menu-info\";\r\n\r\n/** 操作类型 */\r\nexport const actionTypes = {\r\n  /** 设置菜单 */\r\n  setMenus: \"SET_MENUS\",\r\n  /** 导航路由地址 */\r\n  redirectRoute: \"REDIRECT_ROUTE\"\r\n};\r\n\r\n/** 设置菜单信息 */\r\nexport const setMenus = (item: MenuInfo[]) => {\r\n  return {\r\n    type: actionTypes.setMenus,\r\n    menus: item\r\n  };\r\n};\r\n\r\n/** 导航路由地址 */\r\nexport const redirectRoute = (routePath: string) => {\r\n  return {\r\n    type: actionTypes.redirectRoute,\r\n    routePath\r\n  };\r\n};\r\n","import { actionTypes } from \"./action\";\r\nimport { MenuInfo } from \"../../models/menu-info\";\r\nimport { RouteInfo } from \"../../models/route-info\";\r\nimport { Breadcrumb } from \"../../models/breadcrumb\";\r\n\r\n/** 默认菜单路由信息 */\r\nconst defaultRouteState: RouteInfo = {\r\n  menus: [],\r\n  routePath: \"\",\r\n  breadcrumbs: []\r\n};\r\n\r\nconst getBreadcrumbByUrl = (menus: MenuInfo[], url: string) => {\r\n  const breadcrumbs: Breadcrumb[] = [\r\n    {\r\n      breadcrumbName: \"首页\",\r\n      path: \"/\",\r\n      icon: \"home\"\r\n    }\r\n  ];\r\n  let findItem!: MenuInfo;\r\n  const callback = (menu: MenuInfo) => {\r\n    if (menu.url && menu.url === url) {\r\n      findItem = menu;\r\n    }\r\n  };\r\n  while (url) {\r\n    visitMenus(menus, callback);\r\n    if (findItem) {\r\n      break;\r\n    }\r\n    url = url\r\n      .split(\"/\")\r\n      .slice(0, -1)\r\n      .join(\"/\");\r\n  }\r\n\r\n  if (findItem) {\r\n    while (findItem) {\r\n      breadcrumbs.splice(1, 0, {\r\n        breadcrumbName: findItem.title,\r\n        path: findItem.url,\r\n        icon: findItem.icon\r\n      });\r\n      findItem = findItem._parent;\r\n    }\r\n  }\r\n  return breadcrumbs;\r\n};\r\n\r\nexport function visitMenus(\r\n  data: MenuInfo[],\r\n  callback: (\r\n    menu: MenuInfo,\r\n    parentMenu: MenuInfo | null,\r\n    level?: number\r\n  ) => void\r\n) {\r\n  const inFn = (\r\n    menus: MenuInfo[],\r\n    parentMenu: MenuInfo | null,\r\n    level: number\r\n  ) => {\r\n    menus.forEach(menu => {\r\n      if (callback) {\r\n        callback(menu, parentMenu, level);\r\n      }\r\n      if (menu.children) {\r\n        inFn(menu.children, menu, level + 1);\r\n      }\r\n    });\r\n  };\r\n  inFn(data, null, 1);\r\n}\r\n\r\nfunction formatMenus(items: MenuInfo[]) {\r\n  visitMenus(items, (menu, parentMenu, level) => {\r\n    if (!menu._level) {\r\n      menu._level = level;\r\n    }\r\n    if (!menu._parent) {\r\n      menu._parent = parentMenu;\r\n    }\r\n  });\r\n  return items;\r\n}\r\n\r\n/** 路由存储 */\r\nconst routeReducer = (state = defaultRouteState, action: any) => {\r\n  switch (action.type) {\r\n    case actionTypes.setMenus:\r\n      return Object.assign(state, {\r\n        menus: formatMenus(action.menus),\r\n        breadcrumbs: getBreadcrumbByUrl(action.menus, state.routePath)\r\n      });\r\n    case actionTypes.redirectRoute:\r\n      return Object.assign(state, {\r\n        routePath: action.routePath,\r\n        breadcrumbs: getBreadcrumbByUrl(state.menus, action.routePath)\r\n      });\r\n    default:\r\n      break;\r\n  }\r\n  return { ...state };\r\n};\r\n\r\nexport default routeReducer;\r\n","/** 操作类型 */\r\nexport const actionTypes = {\r\n  /** 设置权限 */\r\n  setPermissions: \"SET_PERMISSIONS\"\r\n};\r\n\r\n/** 设置权限 */\r\nexport const setPermissions = (item: string[]) => {\r\n  return {\r\n    type: actionTypes.setPermissions,\r\n    resources: item\r\n  };\r\n};\r\n","import { actionTypes } from \"./action\";\r\nimport { PermissionInfo } from \"../../models/permission-info\";\r\n\r\n/** 默认权限集合信息 */\r\nconst defaultPermissionState: PermissionInfo = {\r\n  resources: []\r\n};\r\n\r\n/** 权限存储 */\r\nconst permissionReducer = (state = defaultPermissionState, action: any) => {\r\n  switch (action.type) {\r\n    case actionTypes.setPermissions:\r\n      return Object.assign(state, {\r\n        resources: action.resources\r\n      });\r\n    default:\r\n      break;\r\n  }\r\n  return { ...state };\r\n};\r\n\r\nexport default permissionReducer;\r\n","import { createStore, combineReducers } from \"redux\";\r\nimport appReducer from \"./app/reducer\";\r\nimport userReducer from \"./user/reducer\";\r\nimport contentReducer from \"./content/reducer\";\r\nimport routeReducer from \"./route/reducer\";\r\nimport permissionReducer from \"./permission/reducer\";\r\n\r\nconst reducers = combineReducers({\r\n  appState: appReducer,\r\n  userState: userReducer,\r\n  routeState: routeReducer,\r\n  permissionState: permissionReducer,\r\n  contentState: contentReducer\r\n});\r\n\r\nconst store = createStore(reducers);\r\nexport default store;\r\n","import React, { Component, Dispatch } from \"react\";\r\nimport { Router } from \"react-router-dom\";\r\nimport { UnregisterCallback, History, Location } from \"history\";\r\nimport { AnyAction } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { redirectRoute } from \"../store/route/action\";\r\n\r\ninterface Props {\r\n  history: History;\r\n  redirectRoute: (routePath: string) => void;\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<AnyAction>, ownerProps: any) => {\r\n  return Object.assign(ownerProps, {\r\n    redirectRoute: (routePath: string) => dispatch(redirectRoute(routePath))\r\n  });\r\n};\r\n\r\nexport const ConnectedRouter = connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(\r\n  class extends Component<Props> {\r\n    unsubscribeFromHistory!: UnregisterCallback;\r\n\r\n    handleLocationChange = (location: Location) => {\r\n      this.props.redirectRoute(location.pathname);\r\n    };\r\n\r\n    componentWillMount() {\r\n      this.unsubscribeFromHistory = this.props.history.listen(\r\n        this.handleLocationChange\r\n      );\r\n      this.handleLocationChange(this.props.history.location);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      if (this.unsubscribeFromHistory) {\r\n        this.unsubscribeFromHistory();\r\n      }\r\n    }\r\n\r\n    render() {\r\n      return <Router {...this.props} />;\r\n    }\r\n  }\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { Empty } from \"antd\";\r\n\r\nexport default class NotFoundException extends Component {\r\n  render() {\r\n    return (\r\n      <Empty\r\n        style={{ marginTop: \"100px\" }}\r\n        description={<span>Not Found</span>}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Layout } from \"antd\";\r\nimport \"./page-content.css\";\r\n\r\nconst { Content } = Layout;\r\n\r\nexport default class PageContent extends Component {\r\n  render() {\r\n    return <Content className=\"page-content\">{this.props.children}</Content>;\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { PageHeader } from \"antd\";\r\nimport { RouteInfo } from \"../../core/models/route-info\";\r\nimport { connect } from \"react-redux\";\r\nimport { Breadcrumb as BreadcrumbModel } from \"../../core/models/breadcrumb\";\r\nimport PageContent from \"../../layout/default/components/page-content\";\r\n\r\ninterface Props {\r\n  breadcrumbs: BreadcrumbModel[];\r\n}\r\n\r\nconst mapStateToProps = ({ routeState }: { routeState: RouteInfo }) => {\r\n  return {\r\n    breadcrumbs: routeState.breadcrumbs\r\n  };\r\n};\r\n\r\nexport const DashboardIndex = connect(\r\n  mapStateToProps,\r\n  null\r\n)(\r\n  class extends Component<Props> {\r\n    render() {\r\n      return (\r\n        <>\r\n          <PageHeader\r\n            title=\"仪表盘\"\r\n            breadcrumb={{ routes: this.props.breadcrumbs }}\r\n          />\r\n          <PageContent>正在努力开发中...</PageContent>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n);\r\n","/** 环境配置 */\r\nexport const environment = {\r\n  /** 服务端Url */\r\n  SERVER_URL: `http://dev.api.com`,\r\n  useHash: true\r\n};\r\n","import axios from \"axios\";\r\nimport { environment } from \"../../environments/environment\";\r\nimport { Modal } from \"antd\";\r\n\r\naxios.defaults.headers[\"Content-Type\"] = \"application/json\";\r\nconst instance = axios.create();\r\n\r\ninstance.interceptors.request.use(\r\n  config => {\r\n    // 统一加上服务端前缀\r\n    let url = config.url || \"\";\r\n    if (\r\n      !url.startsWith(\"./\") &&\r\n      !url.startsWith(\"https://\") &&\r\n      !url.startsWith(\"http://\")\r\n    ) {\r\n      url = environment.SERVER_URL + url;\r\n    }\r\n    /** set token\r\n     * config.headers.Authorization = \"Bearer ...\";\r\n     */\r\n    return config;\r\n  },\r\n  error => {\r\n    console.log(error); // for debug\r\n    Promise.reject(error);\r\n  }\r\n);\r\n\r\ninstance.interceptors.response.use(\r\n  response => {\r\n    return response;\r\n  },\r\n  error => {\r\n    let title = `请求错误`;\r\n    let content = \"\";\r\n    if (error.response) {\r\n      title = `${title} ${error.response.status}`;\r\n      content = `请求地址：${error.request.responseURL}`;\r\n    }\r\n    if (error.message) {\r\n      content = `${content} 错误信息：${error.message}`;\r\n    }\r\n    Modal.error({ title, content });\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport { instance as axios };\r\n","import { axios } from \"../../core/net/default.interceptor\";\r\nimport { MenuInfo } from \"../../core/models/menu-info\";\r\n\r\nconst SERVER_URL = \"/data\";\r\n\r\n/** 获取菜单数据 */\r\nexport const getMenus = async (userId: string) => {\r\n  const url = `${SERVER_URL}/menus.json?userId=${userId}`;\r\n  return axios.get<MenuInfo[]>(url);\r\n};\r\n","import { axios } from \"../../core/net/default.interceptor\";\r\n\r\nconst SERVER_URL = \"/data\";\r\n\r\n/** 获取拥有的资源权限码 */\r\nexport const getResources = async (userId: string) => {\r\n  const url = `${SERVER_URL}/resources.json?userId=${userId}`;\r\n  return axios.get<string[]>(url);\r\n};\r\n","import React, { Component, Dispatch } from \"react\";\r\nimport { Menu, Icon } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { MenuInfo } from \"../../../core/models/menu-info\";\r\nimport { AnyAction } from \"redux\";\r\nimport { setMenus } from \"../../../core/store/route/action\";\r\nimport { visitMenus } from \"../../../core/store/route/reducer\";\r\nimport { setPermissions } from \"../../../core/store/permission/action\";\r\nimport { getMenus } from \"../../../services/menu/menu.service\";\r\nimport { getResources } from \"../../../services/resource/resource.service\";\r\nimport { UserInfo } from \"../../../core/models/user-info\";\r\nimport { RouteInfo } from \"../../../core/models/route-info\";\r\nimport \"./siderbar.css\";\r\nimport { AppInfo } from \"../../../core/models/app-info\";\r\n\r\ninterface Props {\r\n  user: UserInfo;\r\n  collapsed: boolean;\r\n  routePath: string;\r\n  updateMenus: (item: MenuInfo[]) => void;\r\n  updateResources: (item: string[]) => void;\r\n}\r\n\r\ninterface State {\r\n  menus: MenuInfo[];\r\n  openMenuKeys: string[];\r\n  selectedMenuKeys: string[];\r\n}\r\n\r\nconst SubMenu = Menu.SubMenu;\r\n\r\nconst mapStateToProps = ({\r\n  userState,\r\n  appState,\r\n  routeState\r\n}: {\r\n  userState: UserInfo;\r\n  appState: AppInfo;\r\n  routeState: RouteInfo;\r\n}) => {\r\n  return {\r\n    user: userState,\r\n    collapsed: appState.collapsed,\r\n    routePath: routeState.routePath\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<AnyAction>, ownerProps: any) => {\r\n  return Object.assign(ownerProps, {\r\n    updateMenus: (item: MenuInfo[]) => dispatch(setMenus(item)),\r\n    updateResources: (item: string[]) => dispatch(setPermissions(item))\r\n  });\r\n};\r\n\r\nexport const LayoutSider = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(\r\n  class extends Component<Props, State> {\r\n    state: State = {\r\n      menus: [],\r\n      openMenuKeys: [],\r\n      selectedMenuKeys: []\r\n    };\r\n\r\n    componentDidMount() {\r\n      this.loadLocalPermissions();\r\n    }\r\n\r\n    loadLocalPermissions() {\r\n      getMenus(this.props.user.id).then(res => {\r\n        this.props.updateMenus(res.data);\r\n        this.setState({ menus: res.data });\r\n      });\r\n      getResources(this.props.user.id).then(res => {\r\n        this.props.updateResources(res.data);\r\n      });\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps: Props) {\r\n      this.updateMenuKeys(nextProps.routePath, nextProps.collapsed);\r\n    }\r\n\r\n    onOpenChange = (openKeys: string[]) => {\r\n      let openMenuKeys: string[] = this.state.openMenuKeys;\r\n      const latestOpenKey = openKeys.find((key: string) => {\r\n        return openMenuKeys.indexOf(key) === -1;\r\n      });\r\n      if (latestOpenKey) {\r\n        let findItem!: MenuInfo;\r\n        visitMenus(this.state.menus, menu => {\r\n          if (menu.id === latestOpenKey) {\r\n            findItem = menu;\r\n          }\r\n        });\r\n\r\n        if (findItem) {\r\n          openMenuKeys = [];\r\n          while (findItem) {\r\n            openMenuKeys.push(findItem.id);\r\n            findItem = findItem._parent;\r\n          }\r\n        }\r\n        this.setState({ openMenuKeys });\r\n      } else {\r\n        this.setState({ openMenuKeys: openKeys });\r\n      }\r\n    };\r\n\r\n    // 菜单渲染\r\n    renderMenu = (menus: MenuInfo[]) => {\r\n      return menus.map(menu => {\r\n        let item = <span>{menu.title}</span>;\r\n        if (menu.icon) {\r\n          item = (\r\n            <span>\r\n              <Icon type={menu.icon} />\r\n              {item}\r\n            </span>\r\n          );\r\n        }\r\n        if (menu.url) {\r\n          item = <Link to={menu.url}>{item}</Link>;\r\n        }\r\n        if (menu.children) {\r\n          return (\r\n            <SubMenu key={menu.id} title={item}>\r\n              {this.renderMenu(menu.children)}\r\n            </SubMenu>\r\n          );\r\n        }\r\n        return (\r\n          <Menu.Item key={menu.id} title={menu.title} disabled={menu.disabled}>\r\n            {item}\r\n          </Menu.Item>\r\n        );\r\n      });\r\n    };\r\n\r\n    updateMenuKeys = (routePath: string, collapsed: boolean) => {\r\n      let findItem!: MenuInfo;\r\n      let openMenuKeys: string[] = this.state.openMenuKeys;\r\n      let selectedMenuKeys: string[] = this.state.selectedMenuKeys;\r\n      const visitCallback = (menu: MenuInfo) => {\r\n        if (menu.url && menu.url === routePath) {\r\n          findItem = menu;\r\n        }\r\n      };\r\n      while (routePath) {\r\n        visitMenus(this.state.menus, visitCallback);\r\n        if (findItem) {\r\n          break;\r\n        }\r\n        routePath = routePath\r\n          .split(\"/\")\r\n          .slice(0, -1)\r\n          .join(\"/\");\r\n      }\r\n\r\n      if (findItem) {\r\n        openMenuKeys = [];\r\n        selectedMenuKeys = [];\r\n        while (findItem) {\r\n          if (findItem.children) {\r\n            openMenuKeys.push(findItem.id);\r\n          } else {\r\n            selectedMenuKeys.push(findItem.id);\r\n          }\r\n          findItem = findItem._parent;\r\n        }\r\n      }\r\n\r\n      if (collapsed) {\r\n        openMenuKeys = [];\r\n      }\r\n      this.setState({ openMenuKeys, selectedMenuKeys });\r\n    };\r\n\r\n    render() {\r\n      return (\r\n        <Menu\r\n          mode=\"inline\"\r\n          className=\"menu\"\r\n          openKeys={this.state.openMenuKeys}\r\n          selectedKeys={this.state.selectedMenuKeys}\r\n          onOpenChange={this.onOpenChange}\r\n        >\r\n          {this.renderMenu(this.state.menus)}\r\n        </Menu>\r\n      );\r\n    }\r\n  }\r\n);\r\n","import React, { Component, Dispatch } from \"react\";\r\nimport { Layout, Icon, Avatar, Menu, Dropdown, Modal } from \"antd\";\r\nimport screenfull from \"screenfull\";\r\nimport { connect } from \"react-redux\";\r\nimport { toggleCollapse } from \"../../../core/store/app/action\";\r\nimport { AnyAction } from \"redux\";\r\nimport { AppInfo } from \"../../../core/models/app-info\";\r\nimport { UserInfo } from \"../../../core/models/user-info\";\r\nimport { logout } from \"../../../core/store/user/action\";\r\nimport \"./header.css\";\r\n\r\ninterface Props {\r\n  appinfo: AppInfo;\r\n  userinfo: UserInfo;\r\n  toggle: () => void;\r\n  logout: () => void;\r\n}\r\n\r\ninterface State {\r\n  isSuppourtFullscreen: boolean;\r\n  isFullscreen: boolean;\r\n}\r\n\r\nconst { Header } = Layout;\r\n\r\nconst mapStateToProps = ({\r\n  appState,\r\n  userState\r\n}: {\r\n  appState: AppInfo;\r\n  userState: UserInfo;\r\n}) => {\r\n  return {\r\n    appinfo: appState,\r\n    userinfo: userState\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<AnyAction>) => {\r\n  return {\r\n    toggle: () => dispatch(toggleCollapse()),\r\n    logout: () => dispatch(logout())\r\n  };\r\n};\r\n\r\nexport const LayoutHeader = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(\r\n  class extends Component<Props, State> {\r\n    state: State = {\r\n      isSuppourtFullscreen: screenfull && screenfull.enabled,\r\n      isFullscreen: false\r\n    };\r\n\r\n    componentDidMount() {\r\n      window.addEventListener(\"resize\", this.windowResize.bind(this));\r\n    }\r\n\r\n    windowResize() {\r\n      if (screenfull && screenfull.enabled) {\r\n        this.setState({\r\n          isFullscreen: screenfull.isFullscreen\r\n        });\r\n      }\r\n    }\r\n\r\n    logout() {\r\n      Modal.confirm({\r\n        title: \"确认操作\",\r\n        content: \"是否退出登录？\",\r\n        onOk: () => {\r\n          this.props.logout();\r\n        }\r\n      });\r\n    }\r\n\r\n    clearLocalStorage() {\r\n      Modal.confirm({\r\n        title: \"确认操作\",\r\n        content: \"是否清除本地缓存？\",\r\n        onOk() {\r\n          localStorage.clear();\r\n        }\r\n      });\r\n    }\r\n\r\n    toggleFullscreen() {\r\n      if (screenfull && screenfull.enabled) {\r\n        screenfull.toggle();\r\n      }\r\n    }\r\n\r\n    render() {\r\n      const { appinfo, userinfo, toggle } = this.props;\r\n      const userMenu = (\r\n        <Menu>\r\n          <Menu.Item key=\"0\" disabled>\r\n            <strong>姓名：</strong>\r\n            {userinfo.name}\r\n          </Menu.Item>\r\n          <Menu.Item key=\"1\" disabled>\r\n            <strong>角色：</strong>\r\n            {userinfo.rolename}\r\n          </Menu.Item>\r\n          <Menu.Item key=\"2\" disabled>\r\n            <strong>组织：</strong>\r\n            {userinfo.organizename}\r\n          </Menu.Item>\r\n          <Menu.Divider />\r\n          <Menu.Item key=\"3\" onClick={() => this.logout()}>\r\n            注销\r\n          </Menu.Item>\r\n        </Menu>\r\n      );\r\n      const userLi = (\r\n        <Dropdown overlay={userMenu}>\r\n          <li>\r\n            <Avatar\r\n              size=\"small\"\r\n              style={{ backgroundColor: \"#87d068\" }}\r\n              icon=\"user\"\r\n            />\r\n            <span className=\"user-title\">{userinfo.username}</span>\r\n          </li>\r\n        </Dropdown>\r\n      );\r\n      const settingMenu = (\r\n        <Menu>\r\n          <Menu.Item key=\"0\" onClick={() => this.toggleFullscreen()}>\r\n            <Icon\r\n              type={this.state.isFullscreen ? \"fullscreen-exit\" : \"fullscreen\"}\r\n            />\r\n            {this.state.isFullscreen ? \"退出全屏\" : \"全屏\"}\r\n          </Menu.Item>\r\n          <Menu.Item key=\"1\" onClick={() => this.clearLocalStorage()}>\r\n            <Icon type=\"delete\" /> 清理本地缓存\r\n          </Menu.Item>\r\n        </Menu>\r\n      );\r\n      return (\r\n        <Header className=\"main-header\">\r\n          <div\r\n            className=\"title\"\r\n            style={appinfo.collapsed ? { width: \"79px\" } : { width: \"199px\" }}\r\n          >\r\n            <img className=\"logo\" alt={appinfo.name} src=\"/favicon.ico\" />\r\n            <span hidden={appinfo.collapsed}>{appinfo.name}</span>\r\n          </div>\r\n          <div className=\"bar\">\r\n            <ul>\r\n              <li onClick={() => toggle()}>\r\n                <Icon type={appinfo.collapsed ? \"menu-unfold\" : \"menu-fold\"} />\r\n              </li>\r\n            </ul>\r\n            <ul style={{ flex: \"1\" }} />\r\n            <ul>\r\n              <Dropdown overlay={settingMenu}>\r\n                <li>\r\n                  <Icon type=\"setting\" />\r\n                </li>\r\n              </Dropdown>\r\n              {userinfo.id ? userLi : <></>}\r\n            </ul>\r\n          </div>\r\n        </Header>\r\n      );\r\n    }\r\n  }\r\n);\r\n","import React from \"react\";\r\nimport { Layout } from \"antd\";\r\nimport { LayoutSider } from \"./components/siderbar\";\r\nimport { LayoutHeader } from \"./components/header\";\r\nimport { connect } from \"react-redux\";\r\nimport { AppInfo } from \"../../core/models/app-info\";\r\nimport \"./default.css\";\r\n\r\nconst { Sider } = Layout;\r\n\r\nconst mapStateToProps = ({ appState }: { appState: AppInfo }) => {\r\n  return {\r\n    collapsed: appState.collapsed\r\n  };\r\n};\r\n\r\n/** 默认布局 */\r\nexport const DefaultLayout = connect(mapStateToProps)(\r\n  (props: { children: any; collapsed: boolean }) => {\r\n    return (\r\n      <Layout>\r\n        <LayoutHeader />\r\n        <Layout>\r\n          <Sider\r\n            className=\"main-sidebar\"\r\n            trigger={null}\r\n            collapsible\r\n            collapsed={props.collapsed}\r\n          >\r\n            <LayoutSider {...props} />\r\n          </Sider>\r\n          <Layout className=\"main-body\">{props.children}</Layout>\r\n        </Layout>\r\n      </Layout>\r\n    );\r\n  }\r\n);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { UserInfo } from \"../models/user-info\";\r\n\r\nconst mapStateToProps = ({ userState }: { userState: UserInfo }) => {\r\n  return {\r\n    logged: !!userState && !!userState.id\r\n  };\r\n};\r\n\r\nexport const AuthorizedRoute = connect(mapStateToProps)(\r\n  (props: { component: any; logged: boolean }) => {\r\n    const { component: Component, logged, ...rest } = props;\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={routeProps => {\r\n          if (logged) {\r\n            return <Component {...routeProps} />;\r\n          } else {\r\n            return <Redirect to=\"/authorize/login\" />;\r\n          }\r\n        }}\r\n      />\r\n    );\r\n  }\r\n);\r\n","import React, { Component, FormEvent, Dispatch } from \"react\";\r\nimport { Form, Icon, Input, Button, Checkbox } from \"antd\";\r\nimport { FormComponentProps } from \"antd/lib/form\";\r\nimport \"./login.css\";\r\nimport { AnyAction } from \"redux\";\r\nimport { login } from \"../../../core/store/user/action\";\r\nimport { connect } from \"react-redux\";\r\nimport { UserInfo } from \"../../../core/models/user-info\";\r\nimport { History } from \"history\";\r\n\r\ninterface LoginFormProps extends FormComponentProps {\r\n  login: (user: UserInfo) => void;\r\n  history: History;\r\n}\r\n\r\nclass LoginForm extends Component<LoginFormProps> {\r\n  handleSubmit = (e: FormEvent) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        console.log(\"Received values of form: \", values);\r\n        const user: UserInfo = {\r\n          id: values.userName,\r\n          username: values.userName\r\n        };\r\n        this.props.login(user);\r\n        this.props.history.push(\"/\");\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <>\r\n        <div className=\"login-header\">\r\n          <div>\r\n            <img className=\"logo\" alt=\"统一中后台\" src=\"/favicon.ico\" />\r\n            <span className=\"title\">统一中后台</span>\r\n          </div>\r\n          <p className=\"description\">\r\n            统一中后台管理系统,用于快速构建后台管理系统基础项目\r\n          </p>\r\n        </div>\r\n        <Form className=\"login-section\" onSubmit={this.handleSubmit}>\r\n          <Form.Item>\r\n            {getFieldDecorator(\"userName\", {\r\n              rules: [{ required: true, message: \"请填写登录用户名!\" }]\r\n            })(\r\n              <Input\r\n                prefix={\r\n                  <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\r\n                }\r\n                placeholder=\"用户名：any\"\r\n              />\r\n            )}\r\n          </Form.Item>\r\n          <Form.Item>\r\n            {getFieldDecorator(\"password\", {\r\n              rules: [{ required: true, message: \"请填写登录密码!\" }]\r\n            })(\r\n              <Input\r\n                prefix={\r\n                  <Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />\r\n                }\r\n                type=\"password\"\r\n                placeholder=\"密   码：any\"\r\n              />\r\n            )}\r\n          </Form.Item>\r\n          <Form.Item>\r\n            {getFieldDecorator(\"remember\", {\r\n              valuePropName: \"checked\",\r\n              initialValue: true\r\n            })(<Checkbox style={{ float: \"left\" }}>自动登录</Checkbox>)}\r\n            <a style={{ float: \"right\" }} href=\"/user/forgot\">\r\n              忘记密码 ？\r\n            </a>\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\" style={{ width: \"100%\" }}>\r\n              登录\r\n            </Button>\r\n            或者 <a href=\"/user/register\">立即注册！</a>\r\n          </Form.Item>\r\n        </Form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<AnyAction>) => {\r\n  return {\r\n    login: (user: UserInfo) => dispatch(login(user))\r\n  };\r\n};\r\n\r\nconst Login = connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(Form.create({ name: \"login\" })(LoginForm));\r\nexport default Login;\r\n","/** 全屏布局 */\r\nconst FullscreenLayout = (props: { children: any }) => {\r\n  return props.children;\r\n};\r\n\r\nexport default FullscreenLayout;\r\n","import React from \"react\";\r\nimport { Route, match, withRouter, Switch } from \"react-router-dom\";\r\nimport Login from \"./login/login\";\r\nimport FullscreenLayout from \"../../layout/fullscreen\";\r\n\r\n/** 用户路由 */\r\nexport const UserRoutes = withRouter((props: { match: match }) => {\r\n  return (\r\n    <FullscreenLayout>\r\n      <Switch>\r\n        <Route exact path={`${props.match.path}login`} component={Login} />\r\n      </Switch>\r\n    </FullscreenLayout>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { withRouter, Route, Switch, Redirect, match } from \"react-router-dom\";\r\nimport NotFoundException from \"./exceptions/404\";\r\nimport { DashboardIndex } from \"./dashboard\";\r\nimport { DefaultLayout } from \"../layout/default/default\";\r\nimport { AuthorizedRoute } from \"../core/components/auth-route\";\r\nimport { UserRoutes } from \"./user/user-routes\";\r\n\r\nconst DefaultRoutes = (props: { match: match }) => (\r\n  <DefaultLayout>\r\n    <Switch>\r\n      <Route exact path={props.match.path}>\r\n        <Redirect to={`${props.match.path}dashboard`} />\r\n      </Route>\r\n      <Route\r\n        exact\r\n        path={`${props.match.path}dashboard`}\r\n        component={DashboardIndex}\r\n      />\r\n      <Route component={NotFoundException} />\r\n    </Switch>\r\n  </DefaultLayout>\r\n);\r\n\r\n/** 页面路由集合 */\r\nexport const PageRoutes = withRouter((props: any) => {\r\n  return (\r\n    <Switch>\r\n      <Route path={`${props.match.path}authorize/`} component={UserRoutes} />\r\n      <AuthorizedRoute\r\n        path={`${props.match.path}`}\r\n        component={DefaultRoutes}\r\n        {...props}\r\n      />\r\n    </Switch>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./core/store/store\";\r\nimport { createBrowserHistory, createHashHistory } from \"history\";\r\nimport { ConnectedRouter } from \"./core/components/connected-router\";\r\nimport { PageRoutes } from \"./pages/page-routes\";\r\nimport \"./style.css\";\r\nimport { environment } from \"./environments/environment\";\r\n\r\nconst createHistory = () => {\r\n  if (environment.useHash) {\r\n    return createHashHistory();\r\n  } else {\r\n    return createBrowserHistory();\r\n  }\r\n};\r\n\r\nconst App = () => (\r\n  <Provider store={store}>\r\n    <ConnectedRouter history={createHistory()}>\r\n      <PageRoutes />\r\n    </ConnectedRouter>\r\n  </Provider>\r\n);\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}